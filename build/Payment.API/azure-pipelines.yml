# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/services/Payment/*
      - build/Payment.API/azure-pipelines.yml
      - deploy/Azure/Payment.API/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/services/Payment/Payment.API/Payment.API.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'


- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(solution)'


- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/Payment.API.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.DefaultWorkingDirectory)/Output'

- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Azure Connection'
    ScriptType: 'InlineScript'
    Inline: |
      if((Get-AzResourceGroup | where {$_.ResourceGroupName -eq 'eCommAzure'}).Length -eq 0)
      {
          New-AzResourceGroup -Name eCommAzure -Location eastus
      }
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true


- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure Connection'
    subscriptionId: '9188b8f6-6bff-4fd2-aa50-710ea416c84a'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'eCommAzure'
    location: 'East US'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/whosenbocus/eComm_AzureCloud/master/deploy/Azure/Payment.API/PaymentAPI.json'
    csmParametersFileLink: 'https://raw.githubusercontent.com/whosenbocus/eComm_AzureCloud/master/deploy/Azure/Payment.API/PaymentAPI.parameters.json'
    deploymentMode: 'Incremental'
    deploymentOutputs: 'armOutputString'


- task: PowerShell@2
  inputs:
    filePath: '$(System.DefaultWorkingDirectory)/deploy/parse_arm_deployment_output.ps1'
    arguments: '-ArmOutputString ''$(armOutputString)'' -ErrorAction Stop'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Site is $(webSiteName)"


- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Azure Connection'
    ScriptType: 'InlineScript'
    Inline: |
      $ResourceGroup = 'eCommAzure'
      $saKey = (Get-AzStorageAccountKey -ResourceGroupName $ResourceGroup -Name $(storageEndpoint))[0].Value
      $SAConnectionString = "DefaultEndpointsProtocol=https;AccountName=$(storageEndpoint);AccountKey=$saKey;EndpointSuffix=core.windows.net"
      $ApplicationInsight = Get-AzApplicationInsights -ResourceGroupName $ResourceGroup -Name $(applicationInsight)
      
      $web = Get-AzWebApp -ResourceGroupName $ResourceGroup -Name $(webSiteName)
      $appSettingList = $web.SiteConfig.AppSettings
      $hash = @{}
      ForEach ($kvp in $appSettingList) {
          $hash[$kvp.Name] = $kvp.Value
      }
      
      $hash['StorageConnectionString'] = $SAConnectionString
      $hash['APPINSIGHTS_INSTRUMENTATIONKEY'] = $ApplicationInsight.InstrumentationKey
      
      Set-AzWebAppSlot -ResourceGroupName $ResourceGroup -Name $(webSiteName) -AppSettings $hash -Slot production
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true


- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure Connection'
    appType: 'webApp'
    appName: $(webSiteName)
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    deploymentMethod: 'auto'